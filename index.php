<?php 
    $a = '42ой'; 
    define('PI', 3.14);    
?><!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Geekbrains - lesson №1</title>
</head>
<body>
    1. С помощью оператора echo вывелите на страницу <br>
        <ol type="a">
            <li><?php echo (int)$a ; //Целочисленную переменную ?></li>  
            <li><?php echo (double)$a ; //Переменную дробного типа?></li> 
            <li><?php echo (bool)$a; //Переменную булевского типа?></li>  
            <li><?php echo (string)$a; //Строковую переменную?></li> 
            <li><?php echo PI ; //Константу версии PHP 5.5?></li> 
        </ol>
        <hr>
    2. Повторите вывод, заключив перемнные в двойные кавычки("").
        <ol type="a">
            <li><?php echo "(int)$a" ; //Целочисленную переменную?></li>  
            <li><?php echo "(double)$a" ; //Переменную дробного типа?></li> 
            <li><?php echo "(bool)$a"; //Переменную булевского типа?></li>  
            <li><?php echo "(string)$a"; //Строковую переменную?></li> 
            <li><?php echo "PI" ; //Константу версии PHP 5.5?></li> 
        </ol>
        <!-- Разница между ними заключается в том, что если внутри строки первого типа написать имя переменной то интерпретатор PHP подставит значение этой переменной при результирующем выводе. В случае с одинарными кавысками подстановки не происходит, посмотрите 3 пункт.-->
        <hr>
    3. Повторите вывод, заключив перемнные в одинарные кавычки('').
        <ol type="a">
            <li><?php echo '(int)$a' ;  //Целочисленную переменную?></li>  
            <li><?php echo '(double)$a' ;  //Переменную дробного типа?></li> 
            <li><?php echo '(bool)$a' ; //Переменную булевского типа?></li>  
            <li><?php echo '(string)$a'; //Строковую переменную?></li> 
            <li><?php echo 'PI' ; //Константу версии PHP 5.5?></li> 
        </ol>
        <hr>
    4. Выведите на экран любое четверостишие. 
        <?php 
        $b = '"Славная осень! Здоровый, ядреный';
        $c = 'Воздух усталые силы бодрит;';
        $d = 'Лед неокрепший на речке студеной';
        $e = 'Словно как тающий сахар лежит."' ;
        $author = 'Н. А. Некрасов' ;
        
        echo '<br>' . $b ;
        echo '<br>' . $c ;
        echo '<br>' . $d ;
        echo '<br>' . $e  . '<br>';
        echo '<u>' . $author . '</u>';
        ?>
        <hr>
    5. Выполнить эти же действия, с помощью одного оператора echo <br>
        <?php
           echo $b . '<br>' . $c . '<br>' . $d . '<br>' . $e . '<br>' . '<u>' .$author . '</u>'     
        ?>
        <hr>
    6. Попробуйте в выражении использовать разные типы данных, например, сложите число
    «10» и строку «20 приветов». Что получится? Объясните результат.
        <?php
            var_dump(10 + '20приветов');
        /*
         *В данном примере функция показывает что выражение имеет тип integer (целые числа).
         *Как это получилось? Дело в том что в php знак "+" вседа нам дает число, и результатом будет число.
         */
        ?><hr>
    7. Дайте ответ на вопрос, как работает оператор xor? В каких случаях он возвращает
    значение true, в каких – false? Для этого напишите скрипт, который выводит значения
    операций со всеми возможными вариантами операндов (4 варианта). Чему равно $a xor
    $a для любых значений $a?
    <?php
        $x = true;
        $y = false;

        var_dump($x xor $y);
        var_dump($x xor $x);
        var_dump($y xor $x);
        var_dump($y xor $y);

        /*
         * Суть задачи заключаются в следующем.
         * Дана логическая функция XOR – исключающее ИЛИ.
         * Это функция от двух аргументов, каждый из которых может быть нулем или единицей.
         * Она принимает значение 1, когда один из аргументов равен единице, но не оба, иначе 0.
         */
    ?>
    8. Поменять местами два фрагмента.
    
        <?php 
            
            $x = 10;
            $y = 15;
            $x = $y + $x;  //25
            $y = $x - $y; //10
            $x = $x - $y;  //15
        ?>
</body>
</html>